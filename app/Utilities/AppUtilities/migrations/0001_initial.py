# Generated by Django 3.0.6 on 2020-06-04 09:08

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LastCounterReading',
            fields=[
                ('login', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('date_electricity_cr', models.DateField(blank=True, default=datetime.date.today, verbose_name='Дата последнего показания Электричество')),
                ('account_electricity', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Электричество')),
                ('last_electricity_cr', models.PositiveIntegerField(blank=True, null=True, verbose_name='Последнее показание счетчика Электричество')),
                ('account_electricity_night', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Ночное Электричество')),
                ('last_electricity_night_cr', models.PositiveIntegerField(blank=True, null=True, verbose_name='Последнее показание счетчика Ночное Электричество')),
                ('date_electricity_balance', models.DateField(blank=True, default=datetime.date.today, verbose_name='Дата последнего баланса Электричество')),
                ('account_electricity_balance', models.IntegerField(blank=True, default=0, verbose_name='Баланс денег Электричество')),
                ('date_water_cr', models.DateField(blank=True, default=datetime.date.today, verbose_name='Дата последнего показания Вода')),
                ('account_water', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Вода')),
                ('last_water_cr', models.PositiveIntegerField(blank=True, null=True, verbose_name='Последнее показание счетчика Вода')),
                ('account_water_irrigation', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Вода для полива')),
                ('last_water_irrigation_cr', models.PositiveIntegerField(blank=True, null=True, verbose_name='Последнее показание счетчика Вода для полива')),
                ('date_water_balance', models.DateField(blank=True, default=datetime.date.today, verbose_name='Дата последнего баланса Вода')),
                ('account_water_balance', models.IntegerField(blank=True, default=0, verbose_name='Баланс денег Вода')),
                ('date_gas_cr', models.DateField(blank=True, default=datetime.date.today, verbose_name='Дата последнего показания Газ')),
                ('account_gas', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Газ')),
                ('last_gas_cr', models.PositiveIntegerField(blank=True, null=True, verbose_name='Последнее показание счетчика Газ')),
                ('date_gas_balance', models.DateField(blank=True, default=datetime.date.today, verbose_name='Дата последнего баланса Газ')),
                ('account_gas_balance', models.IntegerField(blank=True, default=0, verbose_name='Баланс денег Газ')),
            ],
            options={
                'verbose_name': 'Последнее показание счетчика',
                'verbose_name_plural': 'Последние показания счетчика',
            },
        ),
        migrations.CreateModel(
            name='ServiceProviders',
            fields=[
                ('id_provider', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID поставщика услуг')),
                ('full_name', models.CharField(max_length=50, verbose_name='Полное имя')),
                ('address', models.CharField(max_length=50, verbose_name='Адрес')),
                ('tel_contact', models.CharField(max_length=20, verbose_name='Контактный телефон')),
                ('tel_contact_extra', models.CharField(blank=True, max_length=20, verbose_name='Доп. контактный телефон')),
                ('email', models.EmailField(blank=True, max_length=50, verbose_name='Эл. почта')),
                ('email_extra', models.EmailField(blank=True, max_length=50, verbose_name='Доп. эл. почта')),
                ('url', models.SlugField(max_length=20, unique=True, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Поставщика услуг',
                'verbose_name_plural': 'Поставщики услуг',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('login', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('availability_electricity', models.BooleanField(verbose_name='Наличие счетчика Электричества')),
                ('account_electricity', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Электричество')),
                ('availability_electricity_night', models.BooleanField(verbose_name='Наличие счетчика Ночного Элестричества')),
                ('account_electricity_night', models.CharField(blank=True, max_length=50, verbose_name='Личевой счет Ночное Электричество')),
                ('availability_water', models.BooleanField(verbose_name='Наличие счетчика Воды')),
                ('account_water', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Вода')),
                ('availability_water_irrigation', models.BooleanField(verbose_name='Наличие счетчика Воды для полива')),
                ('account_water_irrigation', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Вода для полива')),
                ('availability_gas', models.BooleanField(verbose_name='Наличие счетчика Газа')),
                ('account_gas', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Газ')),
            ],
            options={
                'verbose_name': 'Услугу',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id_user', models.AutoField(primary_key=True, serialize=False, verbose_name='ID-пользователя')),
                ('sur_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('patronymic', models.CharField(max_length=50, verbose_name='Отчество')),
                ('gender', models.CharField(choices=[('Мужской', 'Мужской'), ('Женский', 'Женский'), ('Не указано', 'Не указано')], default='Не указано', max_length=10, verbose_name='Пол')),
                ('region', models.CharField(max_length=50, verbose_name='Область')),
                ('city', models.CharField(max_length=50, verbose_name='Город (Село)')),
                ('street', models.CharField(max_length=50, verbose_name='Улица (Переулок, Проспект)')),
                ('house', models.PositiveSmallIntegerField(verbose_name='Номер дома')),
                ('prefix_house', models.CharField(blank=True, max_length=10, verbose_name='Приставка к адресу')),
                ('flat', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Номер квартиры')),
                ('tel_number', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('tel_number_extra', models.CharField(blank=True, max_length=20, verbose_name='Доп. номер телефона')),
                ('email', models.EmailField(blank=True, max_length=50, verbose_name='Эл. почта')),
                ('login', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Логин')),
            ],
            options={
                'verbose_name': 'Пользователя',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='HistoryWaterCR',
            fields=[
                ('id_reading', models.AutoField(primary_key=True, serialize=False, verbose_name='ID показания')),
                ('first_account', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Вода')),
                ('second_account', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Вода для полива')),
                ('date_cr', models.DateField(default=datetime.date.today, verbose_name='Дата передачи показаний')),
                ('first_cr', models.PositiveIntegerField(verbose_name='Показание счетчика питьевой воды')),
                ('second_cr', models.PositiveIntegerField(blank=True, null=True, verbose_name='Показание счетчика воды для полива')),
                ('date_recording', models.DateTimeField(auto_now=True, verbose_name='Дата записи в БД показания')),
                ('login', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Историю показаний счетчика воды',
                'verbose_name_plural': 'История показаний счетчика воды',
            },
        ),
        migrations.CreateModel(
            name='HistoryGasCR',
            fields=[
                ('id_reading', models.AutoField(primary_key=True, serialize=False, verbose_name='ID показания')),
                ('first_account', models.CharField(blank=True, max_length=50, verbose_name='Лицевой счет Газ')),
                ('date_cr', models.DateField(default=datetime.date.today, verbose_name='Дата передачи показаний')),
                ('first_cr', models.PositiveIntegerField(verbose_name='Показание счетчика по газу')),
                ('date_recording', models.DateTimeField(auto_now=True, verbose_name='Дата записи в БД показания')),
                ('login', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Историю показаний счетчика газа',
                'verbose_name_plural': 'История показаний счетчика газа',
            },
        ),
        migrations.CreateModel(
            name='HistoryElectricityCR',
            fields=[
                ('id_reading', models.AutoField(primary_key=True, serialize=False, verbose_name='ID показания')),
                ('first_account', models.CharField(default='RJ_545-45', max_length=50, verbose_name='Лицевой счет Электричество')),
                ('second_account', models.CharField(blank=True, max_length=50, null=True, verbose_name='Лицевой счет Ночное Электричество')),
                ('date_cr', models.DateField(default=datetime.date.today, verbose_name='Дата передачи показаний')),
                ('first_cr', models.PositiveIntegerField(verbose_name='Показание дневного счетчика')),
                ('second_cr', models.PositiveIntegerField(blank=True, null=True, verbose_name='Показание ночного счетчика')),
                ('date_recording', models.DateTimeField(auto_now=True, verbose_name='Дата записи в БД показания')),
                ('login', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Историю показаний счетчика электричество',
                'verbose_name_plural': 'Истории показаний счетчика электричество',
            },
        ),
    ]
